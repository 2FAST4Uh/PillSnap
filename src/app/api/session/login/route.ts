// This is an autogenerated file from Firebase Studio.
import { auth } from 'firebase-admin';
import { NextRequest, NextResponse } from 'next/server';
import { SESSION_COOKIE_OPTIONS, SESSION_COOKIE_NAME } from '@/lib/session';
import { getApps, initializeApp, cert } from 'firebase-admin/app';

const serviceAccount = process.env.FIREBASE_SERVICE_ACCOUNT
  ? JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT)
  : undefined;

if (!getApps().length) {
    if (serviceAccount) {
        initializeApp({
            credential: cert(serviceAccount),
        });
    } else {
        // Fallback for local development if service account isn't set
        console.warn("Firebase Admin SDK service account not found. Using default app initialization.");
        initializeApp();
    }
}


export async function GET(request: NextRequest) {
    const authorization = request.headers.get('Authorization');
    const idToken = authorization?.split('Bearer ')[1];

    if (!idToken) {
        return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
    }

    try {
        const expiresIn = 60 * 60 * 24 * 5 * 1000;
        const sessionCookie = await auth().createSessionCookie(idToken, { expiresIn });
        
        return NextResponse.json({
            sessionCookie,
            options: SESSION_COOKIE_OPTIONS,
        });
    } catch (error) {
        console.error('Error creating session cookie:', error);
        return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
    }
}
